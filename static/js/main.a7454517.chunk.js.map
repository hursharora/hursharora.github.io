{"version":3,"sources":["assets/smpvis1.PNG","Modal/ProjectModal.module.css","ProjectCarousel/ProjectCarousel.module.css","TileStyles.module.css","assets/smpvis2.PNG","NavBar/NavLink/NavLink.js","NavBar/NavBar.js","ProjectCarousel/ProjectItem/ProjectItem.js","ProjectCarousel/ProjectCarousel.js","BackDrop/BackDrop.js","NameText/NameText.js","SectionHeader/SectionHeader.js","AboutContent/AboutContent.js","Modal/ProjectModal.js","App.js","serviceWorker.js","index.js","NavBar/NavBar.module.css","AboutContent/AboutContent.module.css","NavBar/NavLink/NavLink.module.css","BackDrop/BackDrop.module.css","assets/logo.png","NameText/NameText.module.css","SectionHeader/SectionHeader.module.css","assets/headshot.jpg","assets/DoorIDThumb.PNG","assets/TVShowTrackerImg.PNG","assets/NoteSet1.PNG","assets/NoteSet2.PNG"],"names":["module","exports","NavLink","scrollHandler","event","props","clicked","current","scrollIntoView","behavior","block","className","classes","onClick","this","active","children","React","Component","NavBar","state","transparent","activeSection","windowHeight","window","innerHeight","halfWindowH","addEventListener","pageYOffset","setState","nextProps","nextState","nextContext","usedClasses","navBar","push","navBarBlack","join","src","Logo","alt","navLinks","homeRef","aboutRef","projectRef","ProjectItem","click","id","ProjectCarouselItem","useClass","ProjectCarousel","projects","map","proj","projectClick","key","tileStyle","name","ProjectCarouselRow","BackDrop","particles","particle","ParticleCanvas","params","ref","sectionRef","NameText","SectionHeader","AboutContent","AboutContainer","AboutPhoto","HeadShot","AboutText","desc","ProjectModal","modalContent","toDisplay","Modal","style","display","show","closed","CloseButton","Container","ImageContainer","image","image2","TextContainer","description","ModalBackdrop","DoorID_description","href","TVShow_description","NoteSet_description","SMP_description","about_description","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","aboutDescription","clickedProject","showingModal","TVShowImage","TileStyles","TVShowTracker","DoorIDImage","DoorID","NoteSet1","NoteSet2","NoteSet","SMP1","SMPVis","createRef","projectClickedHandler","clickedProj","firebase","analytics","logEvent","modalClosedHandler","initializeApp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a7454517.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smpvis1.52a6348a.PNG\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"ProjectModal_Modal__KgffG\",\"Container\":\"ProjectModal_Container__2HwrT\",\"ImageContainer\":\"ProjectModal_ImageContainer__3zSDh\",\"TextContainer\":\"ProjectModal_TextContainer__2d4cL\",\"CloseButton\":\"ProjectModal_CloseButton__14wN3\",\"ModalBackdrop\":\"ProjectModal_ModalBackdrop__19c1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectCarousel\":\"ProjectCarousel_ProjectCarousel__kGzm7\",\"ProjectCarouselRow\":\"ProjectCarousel_ProjectCarouselRow__Hmvqo\",\"ProjectCarouselItem\":\"ProjectCarousel_ProjectCarouselItem__3pKp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TVShowTracker\":\"TileStyles_TVShowTracker__3xMMz\",\"DoorID\":\"TileStyles_DoorID__2YPsQ\",\"NoteSet\":\"TileStyles_NoteSet__t3hds\",\"SMPVis\":\"TileStyles_SMPVis__2rjSQ\"};","module.exports = __webpack_public_path__ + \"static/media/smpvis2.950225e2.PNG\";","import React from \"react\";\r\nimport classes from \"./NavLink.module.css\"\r\n\r\n\r\nclass NavLink extends React.Component {\r\n\r\n    scrollHandler = event => {\r\n        if (this.props.clicked.current) {\r\n            this.props.clicked.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"nearest\"\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className={classes.NavLink}>\r\n                <button\r\n                   onClick={this.scrollHandler}\r\n                   className={this.props.active ? classes.active : null}>{this.props.children}</button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NavLink;","import React from \"react\";\r\nimport classes from \"./NavBar.module.css\"\r\nimport NavLink from \"./NavLink/NavLink\";\r\nimport Logo from \"../assets/logo.png\"\r\n\r\nclass NavBar extends React.Component {\r\n    state = {\r\n        transparent: true,\r\n        activeSection: \"home\"\r\n    }\r\n\r\n    windowHeight = window.innerHeight;\r\n    halfWindowH = this.windowHeight/2;\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.pageYOffset > 10) {\r\n                this.setState({transparent: false});\r\n            } else {\r\n                this.setState({transparent: true});\r\n            }\r\n            if (window.pageYOffset + this.halfWindowH < this.windowHeight) {\r\n                this.setState({activeSection: \"home\"});\r\n            } else if (window.pageYOffset + this.halfWindowH > this.windowHeight\r\n                        && window.pageYOffset + this.halfWindowH < this.windowHeight*2) {\r\n                this.setState({activeSection: \"about\"});\r\n            } else {\r\n                this.setState({activeSection: \"projects\"});\r\n            }\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return (this.state.transparent !== nextState.transparent ||\r\n                this.state.activeSection !== nextState.activeSection);\r\n    }\r\n\r\n    render() {\r\n        let usedClasses = [classes.navBar];\r\n\r\n        if (!this.state.transparent) {\r\n            usedClasses.push(classes.navBarBlack);\r\n        }\r\n\r\n        return (\r\n            <header className={usedClasses.join(\" \")}>\r\n                <img src={Logo} alt=\"logo\"/>\r\n                <nav>\r\n                    <ul className={classes.navLinks}>\r\n                        <NavLink clicked={this.props.homeRef}\r\n                                 active={this.state.activeSection === \"home\"}>Home</NavLink>\r\n                        <NavLink clicked={this.props.aboutRef}\r\n                                 active={this.state.activeSection === \"about\"}>About</NavLink>\r\n                        <NavLink clicked={this.props.projectRef}\r\n                                 active={this.state.activeSection === \"projects\"}>Projects</NavLink>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport classes from \"../ProjectCarousel.module.css\"\r\n\r\nconst ProjectItem = props => {\r\n    return (\r\n        <div onClick={() => props.click(props.id)}\r\n             className={[classes.ProjectCarouselItem, props.useClass].join(\" \")}>\r\n                <p>{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectItem;","import React from \"react\";\r\nimport ProjectItem from \"./ProjectItem/ProjectItem\";\r\nimport classes from \"./ProjectCarousel.module.css\"\r\nimport {Zoom} from \"react-reveal\"\r\n\r\nconst ProjectCarousel = props => {\r\n    let projects = props.projects.map(proj => (\r\n        <ProjectItem id={proj.id}\r\n                     click={props.projectClick}\r\n                     key={proj.id}\r\n                     useClass={proj.tileStyle}>{proj.name}</ProjectItem>\r\n    ))\r\n\r\n    return (\r\n        <Zoom>\r\n            <div className={classes.ProjectCarousel}>\r\n                <div className={classes.ProjectCarouselRow}>\r\n                    {projects}\r\n                </div>\r\n\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nexport default ProjectCarousel;","import React from \"react\";\r\nimport classes from \"./BackDrop.module.css\"\r\n// import Video from \"../assets/VideoBackground.mp4\"\r\nimport Particles from \"react-particles-js\";\r\n\r\nconst BackDrop = props => {\r\n    let particles = null;\r\n    if (props.particle) {\r\n        particles = (\r\n            // <video autoPlay muted loop>\r\n            //     <source src={Video}/>\r\n            // </video>\r\n            <Particles className={classes.ParticleCanvas} params={\r\n                {\r\n                    \"particles\": {\r\n                        \"number\": {\"value\": 50},\r\n                        \"size\": {\"value\": 3}\r\n                    },\r\n                    \"interactivity\": {\r\n                        \"events\": {\r\n                            \"onhover\": {\r\n                                \"enable\": true,\r\n                                \"mode\": \"repulse\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.BackDrop} ref={props.sectionRef}>\r\n            {props.children}\r\n            {particles}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BackDrop;","import React from \"react\";\r\nimport classes from \"./NameText.module.css\"\r\nimport {Zoom} from \"react-reveal\";\r\n\r\nconst NameText = () => {\r\n    return (\r\n        <Zoom>\r\n            <h1 className={classes.NameText}>Hursh Arora</h1>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nexport default NameText;","import React from \"react\";\r\nimport classes from \"./SectionHeader.module.css\"\r\n\r\n\r\nconst SectionHeader = props => (\r\n    <h1 className={classes.SectionHeader}>{props.children}</h1>\r\n)\r\n\r\nexport default SectionHeader;","import React from \"react\";\r\nimport HeadShot from \"../assets/headshot.jpg\";\r\nimport classes from \"./AboutContent.module.css\";\r\nimport {Zoom} from \"react-reveal\";\r\n\r\n\r\nconst AboutContent = props => (\r\n    <div className={classes.AboutContainer}>\r\n        <Zoom>\r\n            <div className={classes.AboutPhoto}>\r\n                <img  src={HeadShot} alt=\"AboutPhoto\"/>\r\n            </div>\r\n            <div className={classes.AboutText}>\r\n                {props.desc}\r\n            </div>\r\n        </Zoom>\r\n    </div>\r\n)\r\n\r\n\r\nexport default AboutContent;\r\n","import React from \"react\";\r\nimport classes from \"./ProjectModal.module.css\"\r\n\r\nclass ProjectModal extends React.Component {\r\n    render() {\r\n        let modalContent = null;\r\n        if (this.props.toDisplay) {\r\n            modalContent = <div className={classes.Modal} style={{\r\n                                display: this.props.show ? null : 'none'\r\n                            }}>\r\n                                <h1>{this.props.toDisplay.name}</h1>\r\n                                <button onClick={this.props.closed} className={classes.CloseButton}/>\r\n                                <div className={classes.Container}>\r\n                                    <div className={classes.ImageContainer}>\r\n                                        <img src={this.props.toDisplay.image} alt=\"Not available\"/>\r\n                                        {this.props.toDisplay.image2 ? <img src={this.props.toDisplay.image2} alt=\"Not Available\"/> : null}\r\n                                    </div>\r\n                                    <div className={classes.TextContainer}>{this.props.toDisplay.description}</div>\r\n                                </div>\r\n                             </div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className={classes.ModalBackdrop} style={{\r\n                    display: this.props.show ? null : 'none'\r\n                }} onClick={this.props.closed}/>\r\n\r\n                    {modalContent}\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectModal;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport ProjectCarousel from \"./ProjectCarousel/ProjectCarousel\";\r\nimport BackDrop from \"./BackDrop/BackDrop\";\r\nimport NameText from \"./NameText/NameText\";\r\nimport SectionHeader from \"./SectionHeader/SectionHeader\";\r\nimport AboutContent from \"./AboutContent/AboutContent\";\r\nimport ProjectModal from \"./Modal/ProjectModal\";\r\nimport TileStyles from \"./TileStyles.module.css\"\r\nimport DoorIDImage from \"./assets/DoorIDThumb.PNG\";\r\nimport TVShowImage from \"./assets/TVShowTrackerImg.PNG\";\r\nimport NoteSet1 from \"./assets/NoteSet1.PNG\";\r\nimport NoteSet2 from \"./assets/NoteSet2.PNG\";\r\nimport SMP1 from \"./assets/smpvis1.PNG\";\r\nimport SMP2 from \"./assets/smpvis2.PNG\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\n\r\n\r\n//replace with functional components\r\n\r\nconst DoorID_description =\r\n    <p>\r\n        DoorID was a 24 hour Hackathon project made at nwHacks 2020. The idea behind\r\n        the project was to help people with memory loss identify who's ringing their doorbell. <br/><br/>\r\n        Originally, my team planned on using the camera on a Ring doorbell to send an image\r\n        to a backend server for facial recognition, and then notify the user using an app.\r\n        However, we ran into problems powering the doorbell, so we ended up using a website to\r\n        simulate a doorbell instead. <br/><br/>\r\n        My teammates worked on backend side of things including using the Azure Face API to\r\n        get the doorbell server running, while I was responsible for creating the Android app that would\r\n        receive notifications from the server. <br/><br/>\r\n        The project Github for the Android app is available\r\n        <a href=\"https://github.com/hursharora/DoorbellID\"> here</a> and for the server\r\n        <a href=\"https://github.com/parsasi/projectDoorbellServer\"> here</a>. The hackathon Devpost is available\r\n        <a href=\"https://devpost.com/software/door-identify\"> here</a>.<br/><br/>\r\n        <b>Technologies Used: Java, Android, Android Studio, JSON</b>\r\n    </p>\r\n\r\nconst TVShow_description =\r\n    <p>\r\n        For one of my course projects, I decided to make a TV show tracker. Users can search for shows,\r\n        add them to a watch list, and track what episodes they have watched. All TV Show data, including\r\n        episode/season information and poster images, are retrieved using TVDB's API. <br/><br/>\r\n        The entire project is made using Java and utilizes JavaFX for UI and jUnit for testing.\r\n        Design patterns are used to reduce coupling and increase cohesion of code.<br/><br/>\r\n        Since TVDB updated their API, the project no longer functions. <br/><br/>\r\n        The project Github is available <a href=\"https://github.com/hursharora/TVShow-Tracker\">here</a>.\r\n        <br/><br/><b>Technologies Used: Java, JavaFX, jUnit, JSON, IntelliJ</b>\r\n    </p>\r\n\r\nconst NoteSet_description =\r\n    <p>\r\n        NoteSet is a note taking and task management web app made using React and Firebase.\r\n        I've always been searching for the perfect note taking app, but I haven't been able to find\r\n        one that has all the features I want. Since I've really been enjoying React lately,\r\n        I decided to create NoteSet in an attempt to create my perfect note taking app. <br/><br/>\r\n        You can visit the live version <a href=\"https://noteset-8f7ba.web.app/\">here</a> (works best on Chrome)\r\n        or check out\r\n        the project Github <a href=\"https://github.com/hursharora/noteset\">here</a>.\r\n        <br/><br/><b>Technologies Used: React, React Router, Redux, Firebase, JavaScript, CSS, HTML/JSX</b>\r\n    </p>\r\n\r\nconst SMP_description =\r\n    <p>\r\n        After learning about the stable matching problem in my algorithms class, I decided to create\r\n        a visualization for it.\r\n        <br/><br/>\r\n        I started off by implementing the Gale-Shapely algorithm in C++, then\r\n        I slightly modified the algorithm so it prints out the steps it takes to\r\n        produce a stable matching. I then created a Node/Express server to run the C++ code\r\n        and return the output of the algorithm as a JSON array. The react front end then uses the\r\n        output to visualize the algorithm.\r\n        <br/><br/>\r\n        You can visit the live version <a href=\"https://smp-vis.herokuapp.com/\">here</a> or you can\r\n        check out the project Github for the front-end <a href=\"https://github.com/hursharora/smp-vis-react\">here</a> and\r\n        the back-end (including C++ code) <a href=\"https://github.com/hursharora/smp-vis-node\">here</a>.\r\n        <br/><br/><b>Technologies Used: React, Node.js, Express.js, C++, JavaScript, CSS, HTML/JSX, Heroku</b>\r\n    </p>\r\n\r\nconst about_description =\r\n    <p>\r\n        I'm a third year Computer Science student at\r\n        The University of British Columbia. Thanks for visiting my website! <br/><br/>\r\n        Currently I'm working on on a note taking and task management web app using React\r\n        and Firebase. <br/><br/>\r\n        Looking for internship opportunities for Winter 2021 and Summer 2021.<br/><br/>\r\n        Check out my <a href=\"https://github.com/hursharora\">Github</a><br/>\r\n        Contact me: hursharora@gmail.com\r\n    </p>\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAMHAAwO-wJb3hRhTgMBZ7wvLJ7nIG589k\",\r\n    authDomain: \"personal-website-41144.firebaseapp.com\",\r\n    databaseURL: \"https://personal-website-41144.firebaseio.com\",\r\n    projectId: \"personal-website-41144\",\r\n    storageBucket: \"personal-website-41144.appspot.com\",\r\n    messagingSenderId: \"536691094725\",\r\n    appId: \"1:536691094725:web:1dc2ad3715320953796cac\",\r\n    measurementId: \"G-RVQQX7G5H4\"\r\n};\r\n\r\nclass App extends Component {\r\n    state = {\r\n        aboutDescription: about_description,\r\n        clickedProject: null,\r\n        showingModal: false,\r\n        projects: [{\r\n            name: \"TVShow Tracker\",\r\n            image: TVShowImage,\r\n            image2: null,\r\n            description: TVShow_description,\r\n            id: 0,\r\n            tileStyle: TileStyles.TVShowTracker\r\n        }, {\r\n            name: \"DoorID\",\r\n            image: DoorIDImage,\r\n            image2: null,\r\n            description: DoorID_description,\r\n            id: 1,\r\n            tileStyle: TileStyles.DoorID\r\n        }, {\r\n            name: \"NoteSet\",\r\n            image: NoteSet1,\r\n            image2: NoteSet2,\r\n            description: NoteSet_description,\r\n            id: 2,\r\n            tileStyle: TileStyles.NoteSet\r\n        }, {\r\n            name: \"Stable Matching Visualizer\",\r\n            image: SMP1,\r\n            image2: null,\r\n            id: 3,\r\n            description: SMP_description,\r\n            tileStyle: TileStyles.SMPVis\r\n        }]\r\n    }\r\n\r\n    projectRef = React.createRef()\r\n    aboutRef = React.createRef();\r\n    homeRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        firebase.initializeApp(firebaseConfig);\r\n        firebase.analytics();\r\n    }\r\n\r\n    projectClickedHandler = id => {\r\n        let clickedProj = this.state.projects[id];\r\n        this.setState({\r\n            clickedProject: clickedProj,\r\n            showingModal: true\r\n        });\r\n        firebase.analytics().logEvent(\"clicked_\" + clickedProj.name);\r\n    }\r\n\r\n    modalClosedHandler = () => {\r\n        this.setState({showingModal: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavBar projectRef={this.projectRef} aboutRef={this.aboutRef} homeRef={this.homeRef}/>\r\n                <BackDrop particle sectionRef={this.homeRef}>\r\n                    <NameText/>\r\n                </BackDrop>\r\n                <BackDrop sectionRef={this.aboutRef}>\r\n                    <SectionHeader>About</SectionHeader>\r\n                    <AboutContent desc={this.state.aboutDescription}/>\r\n                </BackDrop>\r\n                <BackDrop sectionRef={this.projectRef}>\r\n                    <SectionHeader>Projects</SectionHeader>\r\n                    <ProjectModal show={this.state.showingModal}\r\n                                  closed={this.modalClosedHandler}\r\n                                  toDisplay={this.state.clickedProject}/>\r\n                    <ProjectCarousel projects={this.state.projects}\r\n                                     projectClick={this.projectClickedHandler}/>\r\n                </BackDrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__c54Yv\",\"navLinks\":\"NavBar_navLinks__1Daeq\",\"navBarBlack\":\"NavBar_navBarBlack__TUlq7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutContainer\":\"AboutContent_AboutContainer__1PpBA\",\"AboutText\":\"AboutContent_AboutText__2EV_f\",\"AboutPhoto\":\"AboutContent_AboutPhoto__BmUu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"NavLink_NavLink__2pGDk\",\"active\":\"NavLink_active__393bR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__3aLD2\",\"ParticleCanvas\":\"BackDrop_ParticleCanvas__3skbk\"};","module.exports = __webpack_public_path__ + \"static/media/logo.79b7f306.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NameText\":\"NameText_NameText__3b7Xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionHeader\":\"SectionHeader_SectionHeader__1OCf5\"};","module.exports = __webpack_public_path__ + \"static/media/headshot.96620795.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DoorIDThumb.5afdcdb9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/TVShowTrackerImg.cd01b2a6.PNG\";","module.exports = __webpack_public_path__ + \"static/media/NoteSet1.713117dd.PNG\";","module.exports = __webpack_public_path__ + \"static/media/NoteSet2.681e1852.PNG\";"],"sourceRoot":""}